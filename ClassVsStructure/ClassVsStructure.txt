A struct is a value type whereas a class is a reference type.

All the differences that are applicable to value type and reference type are also applicable to classes and structures.

struct stored on stack where as class stored on the heap.

value types hold their value in memory where they are declared, but reference types hold a reference to an object in memory.

value types are dstroyed immediately after the scope is lost, where as for reference types, only the reference variable is destroyed
after the scope is lost. The object is later destroyed by garbage collector.

When you copy a struct into another struct, a new copy of that struct gets created and modifications on one struct will not affect the values contained by the other struct.

When you copy a class into another class, we only get a copy of the reference variale. Both the reference variables point to the same object on the heap. 
So, operations on one variable will affect the values contained by the other reference variable.

struct cant have destructors but classes can have destructors.

struct cannot have explicit parameter less constructor whareas classes have.

struct cant inherit from another class where as a class can. 

But, both structs and classes can inherit from interfaces.